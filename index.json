{"repository_name":"github.com/z64/discordcr-middleware","body":"# discordcr-middleware\n\nAn extension of [discordcr's](https://github.com/meew0/discordcr) `Client` that\nadds middleware functionality, similar to that of webserver libraries. The goal\nis to provide a very customizable way to conditionally execute event handlers,\nand make great reuse of code and state between events.\n\n- [Documentation](https://z64.github.io/discordcr-middleware)\n\n## Deprecation notice\n\nThe functionality provided by this shard is now built into discordcr. It\n**should not** be used, as it would duplicate a bunch of code.\n\nEventually this repo will be reorganized to host *only* the stock middleware.\nIf you still want to use them, you can just specifically require them instead\nof requiring the entire extension.\n\n## Installation\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  discordcr-middleware:\n    github: z64/discordcr-middleware\n```\n\n## Usage\n\nRequire the extension:\n```crystal\nrequire \"discordcr-middleware\"\n\n```\n\n### Creating Middleware\n\nAny class that implements `def call(payload, context, &block)` can be used as\nmiddleware:\n\n```crystal\nclass Middleware\n  def call(payload, context)\n    # Do things with payload and context..\n    yield\n  end\nend\n```\n\n`payload` is the `Discord` event payload that triggered the event handler. A\nmiddleware can be designed to handle multiple kinds of payloads by overloading\n`call` and restricting `payload` to different types:\n\n```crystal\nclass Middleware\n  def call(payload : Discord::Message, context)\n    # Do things with a message..\n    yield\n  end\n\n  def call(payload : Discord::Gateway::PresenceUpdatePayload, context)\n    # Do things with a presence update..\n    yield\n  end\nend\n```\n\nIf you try to use a middleware class with an event that it doesn't support,\nthis will result in a compile-time error.\n\n`context` is an instance of `Context`. This is a special class that allows\nyou to store arbitrary `class` objects to be referenced later in the middleware\nchain. How the library handles `context` and how it should be used will be\noutlined in the next section, but in brief:\n\n```crystal\nclass Foo\nend\n\nfoo = Foo.new\ncontext.put(foo)\ncontext[Foo] == foo # => true\n```\n\nThe `&block` passed to `call` is a block to be yielded to that\ndetermines whether or not middleware that follow should be executed.\n\nYou can define an `#initialize` for your middleware that will let you configure\nhow you want your middleware to behave for different event handlers, as opposed\nto creating another middleware class with extremely similar behavior.\n\n### Usage with Client\n\nAny event handler can have a middleware chain applied to it.\n\nThe event handling process goes like this:\n\n1. The message event is received by the client\n2. An \"empty\" `Context` is initialized, and the receiving `Client` is added\nto it\n3. Each middleware in the chain is added to `Context`. This allows you to\naccess the middleware that have run previously in the chain, either\nfrom inside one of the middleware or in the event handler itself.\n4. The event is passed through each middleware, providing that each one\nsuccessfully `yield`s. If any middleware does not `yield`, execution\nof the rest of the chain will stop.\n\n```crystal\nclient.on_message_create(MiddlewareA.new, MiddlewareB.new) do |payload, context|\n  payload # => Discord::Message\n  context # => Discord::Context\n  context[Discord::Client] == client # => true\n  context[MiddlewareA]               # => MiddlewareA\n  context[MiddlewareB]               # => MiddlewareB\nend\n```\n\nIt's also worth noting you can share the same instance of a middleware between\nmultiple event handlers:\n\n```crystal\nmiddleware = Middleware.new\n\nclient.on_message_create(middleware) do |payload|\n  # ...\nend\n\nclient.on_message_update(middleware) do |payload|\n  # ...\nend\n```\n\nThis is useful, for example, for a middleware that has some kind of state that\naffects multiple handlers. You could have a single `Prefix` middleware instance\nthat stores the client's prefix in memory, so that when you update the prefix,\nthe runtime behavior on all of your handlers updates at once.\n\nThe event handler block is also optional, making it possible to have\npure-middleware chains:\n\n```crystal\nclient.on_message_create(MiddlewareA.new, MiddlewareB.new)\n```\n\n### [Additional Examples](https://github.com/z64/discordcr-middleware/tree/master/examples)\n\n## Stock Middleware\n\nA collection of basic, common use-case middleware are provided in [`discordcr-middleware/middleware`](src/discordcr-middleware/middleware).\n\nRequire them explicitly to make use of them:\n\n```crystal\nrequire \"discordcr-middleware/middleware/prefix\"\n\nDiscordMiddleware::Prefix.new(\"!help\")\n```\n\n## Contributors\n\n- [z64](https://github.com/z64)  - creator, maintainer\n\n*Inspired by the [raze](https://razecr.com/) web framework and its [middleware system](https://razecr.com/docs/middlewares).*\n","program":{"html_id":"github.com/z64/discordcr-middleware/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/z64/discordcr-middleware","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/z64/discordcr-middleware/Discord","path":"Discord.html","kind":"module","full_name":"Discord","name":"Discord","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/discordcr/src/discordcr/mappings/converters.cr","line_number":4,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/lib/discordcr/src/discordcr/mappings/converters.cr"},{"filename":"lib/discordcr/src/discordcr/mappings/channel.cr","line_number":3,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/lib/discordcr/src/discordcr/mappings/channel.cr"},{"filename":"lib/discordcr/src/discordcr/mappings/user.cr","line_number":3,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/lib/discordcr/src/discordcr/mappings/user.cr"},{"filename":"lib/discordcr/src/discordcr/mappings/voice.cr","line_number":3,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/lib/discordcr/src/discordcr/mappings/voice.cr"},{"filename":"lib/discordcr/src/discordcr/mappings/guild.cr","line_number":4,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/lib/discordcr/src/discordcr/mappings/guild.cr"},{"filename":"lib/discordcr/src/discordcr/mappings/gateway.cr","line_number":6,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/lib/discordcr/src/discordcr/mappings/gateway.cr"},{"filename":"lib/discordcr/src/discordcr/mappings/invite.cr","line_number":4,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/lib/discordcr/src/discordcr/mappings/invite.cr"},{"filename":"lib/discordcr/src/discordcr/mappings/oauth2.cr","line_number":4,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/lib/discordcr/src/discordcr/mappings/oauth2.cr"},{"filename":"lib/discordcr/src/discordcr/mappings/permissions.cr","line_number":1,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/lib/discordcr/src/discordcr/mappings/permissions.cr"},{"filename":"lib/discordcr/src/discordcr/mappings/rest.cr","line_number":3,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/lib/discordcr/src/discordcr/mappings/rest.cr"},{"filename":"lib/discordcr/src/discordcr/mappings/vws.cr","line_number":3,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/lib/discordcr/src/discordcr/mappings/vws.cr"},{"filename":"lib/discordcr/src/discordcr/mappings/webhook.cr","line_number":4,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/lib/discordcr/src/discordcr/mappings/webhook.cr"},{"filename":"lib/discordcr/src/discordcr/cache.cr","line_number":3,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/lib/discordcr/src/discordcr/cache.cr"},{"filename":"lib/discordcr/src/discordcr/version.cr","line_number":1,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/lib/discordcr/src/discordcr/version.cr"},{"filename":"lib/discordcr/src/discordcr/errors.cr","line_number":4,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/lib/discordcr/src/discordcr/errors.cr"},{"filename":"lib/discordcr/src/discordcr/rest.cr","line_number":10,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/lib/discordcr/src/discordcr/rest.cr"},{"filename":"lib/discordcr/src/discordcr/client.cr","line_number":7,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/lib/discordcr/src/discordcr/client.cr"},{"filename":"lib/discordcr/src/discordcr/dca.cr","line_number":3,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/lib/discordcr/src/discordcr/dca.cr"},{"filename":"lib/discordcr/src/discordcr/paginator.cr","line_number":1,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/lib/discordcr/src/discordcr/paginator.cr"},{"filename":"lib/discordcr/src/discordcr/snowflake.cr","line_number":1,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/lib/discordcr/src/discordcr/snowflake.cr"},{"filename":"lib/discordcr/src/discordcr/sodium.cr","line_number":1,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/lib/discordcr/src/discordcr/sodium.cr"},{"filename":"lib/discordcr/src/discordcr/websocket.cr","line_number":4,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/lib/discordcr/src/discordcr/websocket.cr"},{"filename":"lib/discordcr/src/discordcr/voice.cr","line_number":8,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/lib/discordcr/src/discordcr/voice.cr"},{"filename":"lib/discordcr/src/discordcr.cr","line_number":3,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/lib/discordcr/src/discordcr.cr"},{"filename":"discordcr-middleware/context.cr","line_number":1,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/context.cr"},{"filename":"discordcr-middleware/stack.cr","line_number":1,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/stack.cr"},{"filename":"discordcr-middleware.cr","line_number":4,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr"}],"repository_name":"github.com/z64/discordcr-middleware","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/z64/discordcr-middleware/Discord/Client","path":"Discord/Client.html","kind":"class","full_name":"Discord::Client","name":"Client","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr-middleware/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/z64/discordcr-middleware/Discord/REST","kind":"module","full_name":"Discord::REST","name":"REST"},{"html_id":"github.com/z64/discordcr-middleware/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/z64/discordcr-middleware/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/discordcr/src/discordcr/client.cr","line_number":25,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/lib/discordcr/src/discordcr/client.cr"},{"filename":"discordcr-middleware.cr","line_number":5,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr"}],"repository_name":"github.com/z64/discordcr-middleware","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/z64/discordcr-middleware/Discord/REST","kind":"module","full_name":"Discord::REST","name":"REST"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr-middleware/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":"The basic client class that is used to connect to Discord, send REST\nrequests, or send or receive gateway messages. It is required for doing any\nsort of interaction with Discord.\n\nA new simple client that does nothing yet can be created like this:\n```\nclient = Discord::Client.new(token: \"Bot token\", client_id: 123_u64)\n```\n\nWith this client, REST requests can now be sent. (See the `Discord::REST`\nmodule.) A gateway connection can also be started using the `#run` method.","summary":"<p>The basic client class that is used to connect to Discord, send REST requests, or send or receive gateway messages.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"on_channel_create(*middleware)-instance-method","html_id":"on_channel_create(*middleware)-instance-method","name":"on_channel_create","doc":"Creates a `Client#on_channel_create` handler with a middleware chain.\nHandles a `Channel` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_channel_create%28%2Amiddleware%29-instance-method\">Client#on_channel_create</a></code> handler with a middleware chain.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L38","def":{"name":"on_channel_create","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_channel_create do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context)\nend\n"}},{"id":"on_channel_create(*middleware,&block:Channel,Context->)-instance-method","html_id":"on_channel_create(*middleware,&amp;block:Channel,Context-&gt;)-instance-method","name":"on_channel_create","doc":"Creates a `Client#on_channel_create` handler with a middleware chain and\ntrailing block. Handles a `Channel` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_channel_create%28%2Amiddleware%29-instance-method\">Client#on_channel_create</a></code> handler with a middleware chain and trailing block.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware, &block : Channel, Context -> )","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L38","def":{"name":"on_channel_create","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Channel, Context -> )"},"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_channel_create do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context, 0, &block)\nend\n"}},{"id":"on_channel_delete(*middleware,&block:Channel,Context->)-instance-method","html_id":"on_channel_delete(*middleware,&amp;block:Channel,Context-&gt;)-instance-method","name":"on_channel_delete","doc":"Creates a `Client#on_channel_delete` handler with a middleware chain and\ntrailing block. Handles a `Channel` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_channel_delete%28%2Amiddleware%2C%26block%3AChannel%2CContext-%3E%29-instance-method\">Client#on_channel_delete</a></code> handler with a middleware chain and trailing block.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware, &block : Channel, Context -> )","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L42","def":{"name":"on_channel_delete","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Channel, Context -> )"},"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_channel_delete do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context, 0, &block)\nend\n"}},{"id":"on_channel_delete(*middleware)-instance-method","html_id":"on_channel_delete(*middleware)-instance-method","name":"on_channel_delete","doc":"Creates a `Client#on_channel_delete` handler with a middleware chain.\nHandles a `Channel` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_channel_delete%28%2Amiddleware%2C%26block%3AChannel%2CContext-%3E%29-instance-method\">Client#on_channel_delete</a></code> handler with a middleware chain.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L42","def":{"name":"on_channel_delete","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_channel_delete do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context)\nend\n"}},{"id":"on_channel_update(*middleware)-instance-method","html_id":"on_channel_update(*middleware)-instance-method","name":"on_channel_update","doc":"Creates a `Client#on_channel_update` handler with a middleware chain.\nHandles a `Channel` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_channel_update%28%2Amiddleware%29-instance-method\">Client#on_channel_update</a></code> handler with a middleware chain.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L40","def":{"name":"on_channel_update","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_channel_update do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context)\nend\n"}},{"id":"on_channel_update(*middleware,&block:Channel,Context->)-instance-method","html_id":"on_channel_update(*middleware,&amp;block:Channel,Context-&gt;)-instance-method","name":"on_channel_update","doc":"Creates a `Client#on_channel_update` handler with a middleware chain and\ntrailing block. Handles a `Channel` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_channel_update%28%2Amiddleware%29-instance-method\">Client#on_channel_update</a></code> handler with a middleware chain and trailing block.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware, &block : Channel, Context -> )","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L40","def":{"name":"on_channel_update","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Channel, Context -> )"},"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_channel_update do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context, 0, &block)\nend\n"}},{"id":"on_dispatch(*middleware,&block:::Tuple(String,IO::Memory),Context->)-instance-method","html_id":"on_dispatch(*middleware,&amp;block:::Tuple(String,IO::Memory),Context-&gt;)-instance-method","name":"on_dispatch","doc":"Creates a `Client#on_dispatch` handler with a middleware chain and\ntrailing block. Handles a `{String, IO::Memory}` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_dispatch%28%2Amiddleware%2C%26block%3A%3A%3ATuple%28String%2CIO%3A%3AMemory%29%2CContext-%3E%29-instance-method\">Client#on_dispatch</a></code> handler with a middleware chain and trailing block.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware, &block : ::Tuple(String, IO::Memory), Context -> )","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L32","def":{"name":"on_dispatch","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Tuple(String, IO::Memory), Context -> )"},"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_dispatch do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context, 0, &block)\nend\n"}},{"id":"on_dispatch(*middleware)-instance-method","html_id":"on_dispatch(*middleware)-instance-method","name":"on_dispatch","doc":"Creates a `Client#on_dispatch` handler with a middleware chain.\nHandles a `{String, IO::Memory}` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_dispatch%28%2Amiddleware%2C%26block%3A%3A%3ATuple%28String%2CIO%3A%3AMemory%29%2CContext-%3E%29-instance-method\">Client#on_dispatch</a></code> handler with a middleware chain.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L32","def":{"name":"on_dispatch","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_dispatch do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context)\nend\n"}},{"id":"on_guild_ban_add(*middleware,&block:Gateway::GuildBanPayload,Context->)-instance-method","html_id":"on_guild_ban_add(*middleware,&amp;block:Gateway::GuildBanPayload,Context-&gt;)-instance-method","name":"on_guild_ban_add","doc":"Creates a `Client#on_guild_ban_add` handler with a middleware chain and\ntrailing block. Handles a `Gateway::GuildBanPayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_guild_ban_add%28%2Amiddleware%2C%26block%3AGateway%3A%3AGuildBanPayload%2CContext-%3E%29-instance-method\">Client#on_guild_ban_add</a></code> handler with a middleware chain and trailing block.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware, &block : Gateway::GuildBanPayload, Context -> )","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L50","def":{"name":"on_guild_ban_add","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Gateway::GuildBanPayload, Context -> )"},"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_guild_ban_add do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context, 0, &block)\nend\n"}},{"id":"on_guild_ban_add(*middleware)-instance-method","html_id":"on_guild_ban_add(*middleware)-instance-method","name":"on_guild_ban_add","doc":"Creates a `Client#on_guild_ban_add` handler with a middleware chain.\nHandles a `Gateway::GuildBanPayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_guild_ban_add%28%2Amiddleware%2C%26block%3AGateway%3A%3AGuildBanPayload%2CContext-%3E%29-instance-method\">Client#on_guild_ban_add</a></code> handler with a middleware chain.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L50","def":{"name":"on_guild_ban_add","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_guild_ban_add do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context)\nend\n"}},{"id":"on_guild_ban_remove(*middleware)-instance-method","html_id":"on_guild_ban_remove(*middleware)-instance-method","name":"on_guild_ban_remove","doc":"Creates a `Client#on_guild_ban_remove` handler with a middleware chain.\nHandles a `Gateway::GuildBanPayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_guild_ban_remove%28%2Amiddleware%29-instance-method\">Client#on_guild_ban_remove</a></code> handler with a middleware chain.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L52","def":{"name":"on_guild_ban_remove","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_guild_ban_remove do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context)\nend\n"}},{"id":"on_guild_ban_remove(*middleware,&block:Gateway::GuildBanPayload,Context->)-instance-method","html_id":"on_guild_ban_remove(*middleware,&amp;block:Gateway::GuildBanPayload,Context-&gt;)-instance-method","name":"on_guild_ban_remove","doc":"Creates a `Client#on_guild_ban_remove` handler with a middleware chain and\ntrailing block. Handles a `Gateway::GuildBanPayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_guild_ban_remove%28%2Amiddleware%29-instance-method\">Client#on_guild_ban_remove</a></code> handler with a middleware chain and trailing block.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware, &block : Gateway::GuildBanPayload, Context -> )","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L52","def":{"name":"on_guild_ban_remove","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Gateway::GuildBanPayload, Context -> )"},"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_guild_ban_remove do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context, 0, &block)\nend\n"}},{"id":"on_guild_create(*middleware,&block:Gateway::GuildCreatePayload,Context->)-instance-method","html_id":"on_guild_create(*middleware,&amp;block:Gateway::GuildCreatePayload,Context-&gt;)-instance-method","name":"on_guild_create","doc":"Creates a `Client#on_guild_create` handler with a middleware chain and\ntrailing block. Handles a `Gateway::GuildCreatePayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_guild_create%28%2Amiddleware%2C%26block%3AGateway%3A%3AGuildCreatePayload%2CContext-%3E%29-instance-method\">Client#on_guild_create</a></code> handler with a middleware chain and trailing block.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware, &block : Gateway::GuildCreatePayload, Context -> )","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L44","def":{"name":"on_guild_create","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Gateway::GuildCreatePayload, Context -> )"},"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_guild_create do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context, 0, &block)\nend\n"}},{"id":"on_guild_create(*middleware)-instance-method","html_id":"on_guild_create(*middleware)-instance-method","name":"on_guild_create","doc":"Creates a `Client#on_guild_create` handler with a middleware chain.\nHandles a `Gateway::GuildCreatePayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_guild_create%28%2Amiddleware%2C%26block%3AGateway%3A%3AGuildCreatePayload%2CContext-%3E%29-instance-method\">Client#on_guild_create</a></code> handler with a middleware chain.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L44","def":{"name":"on_guild_create","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_guild_create do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context)\nend\n"}},{"id":"on_guild_delete(*middleware,&block:Gateway::GuildDeletePayload,Context->)-instance-method","html_id":"on_guild_delete(*middleware,&amp;block:Gateway::GuildDeletePayload,Context-&gt;)-instance-method","name":"on_guild_delete","doc":"Creates a `Client#on_guild_delete` handler with a middleware chain and\ntrailing block. Handles a `Gateway::GuildDeletePayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_guild_delete%28%2Amiddleware%2C%26block%3AGateway%3A%3AGuildDeletePayload%2CContext-%3E%29-instance-method\">Client#on_guild_delete</a></code> handler with a middleware chain and trailing block.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware, &block : Gateway::GuildDeletePayload, Context -> )","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L48","def":{"name":"on_guild_delete","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Gateway::GuildDeletePayload, Context -> )"},"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_guild_delete do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context, 0, &block)\nend\n"}},{"id":"on_guild_delete(*middleware)-instance-method","html_id":"on_guild_delete(*middleware)-instance-method","name":"on_guild_delete","doc":"Creates a `Client#on_guild_delete` handler with a middleware chain.\nHandles a `Gateway::GuildDeletePayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_guild_delete%28%2Amiddleware%2C%26block%3AGateway%3A%3AGuildDeletePayload%2CContext-%3E%29-instance-method\">Client#on_guild_delete</a></code> handler with a middleware chain.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L48","def":{"name":"on_guild_delete","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_guild_delete do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context)\nend\n"}},{"id":"on_guild_emoji_update(*middleware)-instance-method","html_id":"on_guild_emoji_update(*middleware)-instance-method","name":"on_guild_emoji_update","doc":"Creates a `Client#on_guild_emoji_update` handler with a middleware chain.\nHandles a `Gateway::GuildEmojiUpdatePayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_guild_emoji_update%28%2Amiddleware%29-instance-method\">Client#on_guild_emoji_update</a></code> handler with a middleware chain.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L54","def":{"name":"on_guild_emoji_update","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_guild_emoji_update do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context)\nend\n"}},{"id":"on_guild_emoji_update(*middleware,&block:Gateway::GuildEmojiUpdatePayload,Context->)-instance-method","html_id":"on_guild_emoji_update(*middleware,&amp;block:Gateway::GuildEmojiUpdatePayload,Context-&gt;)-instance-method","name":"on_guild_emoji_update","doc":"Creates a `Client#on_guild_emoji_update` handler with a middleware chain and\ntrailing block. Handles a `Gateway::GuildEmojiUpdatePayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_guild_emoji_update%28%2Amiddleware%29-instance-method\">Client#on_guild_emoji_update</a></code> handler with a middleware chain and trailing block.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware, &block : Gateway::GuildEmojiUpdatePayload, Context -> )","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L54","def":{"name":"on_guild_emoji_update","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Gateway::GuildEmojiUpdatePayload, Context -> )"},"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_guild_emoji_update do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context, 0, &block)\nend\n"}},{"id":"on_guild_integrations_update(*middleware,&block:Gateway::GuildIntegrationsUpdatePayload,Context->)-instance-method","html_id":"on_guild_integrations_update(*middleware,&amp;block:Gateway::GuildIntegrationsUpdatePayload,Context-&gt;)-instance-method","name":"on_guild_integrations_update","doc":"Creates a `Client#on_guild_integrations_update` handler with a middleware chain and\ntrailing block. Handles a `Gateway::GuildIntegrationsUpdatePayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_guild_integrations_update%28%2Amiddleware%2C%26block%3AGateway%3A%3AGuildIntegrationsUpdatePayload%2CContext-%3E%29-instance-method\">Client#on_guild_integrations_update</a></code> handler with a middleware chain and trailing block.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware, &block : Gateway::GuildIntegrationsUpdatePayload, Context -> )","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L56","def":{"name":"on_guild_integrations_update","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Gateway::GuildIntegrationsUpdatePayload, Context -> )"},"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_guild_integrations_update do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context, 0, &block)\nend\n"}},{"id":"on_guild_integrations_update(*middleware)-instance-method","html_id":"on_guild_integrations_update(*middleware)-instance-method","name":"on_guild_integrations_update","doc":"Creates a `Client#on_guild_integrations_update` handler with a middleware chain.\nHandles a `Gateway::GuildIntegrationsUpdatePayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_guild_integrations_update%28%2Amiddleware%2C%26block%3AGateway%3A%3AGuildIntegrationsUpdatePayload%2CContext-%3E%29-instance-method\">Client#on_guild_integrations_update</a></code> handler with a middleware chain.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L56","def":{"name":"on_guild_integrations_update","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_guild_integrations_update do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context)\nend\n"}},{"id":"on_guild_member_add(*middleware,&block:Gateway::GuildMemberAddPayload,Context->)-instance-method","html_id":"on_guild_member_add(*middleware,&amp;block:Gateway::GuildMemberAddPayload,Context-&gt;)-instance-method","name":"on_guild_member_add","doc":"Creates a `Client#on_guild_member_add` handler with a middleware chain and\ntrailing block. Handles a `Gateway::GuildMemberAddPayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_guild_member_add%28%2Amiddleware%2C%26block%3AGateway%3A%3AGuildMemberAddPayload%2CContext-%3E%29-instance-method\">Client#on_guild_member_add</a></code> handler with a middleware chain and trailing block.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware, &block : Gateway::GuildMemberAddPayload, Context -> )","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L58","def":{"name":"on_guild_member_add","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Gateway::GuildMemberAddPayload, Context -> )"},"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_guild_member_add do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context, 0, &block)\nend\n"}},{"id":"on_guild_member_add(*middleware)-instance-method","html_id":"on_guild_member_add(*middleware)-instance-method","name":"on_guild_member_add","doc":"Creates a `Client#on_guild_member_add` handler with a middleware chain.\nHandles a `Gateway::GuildMemberAddPayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_guild_member_add%28%2Amiddleware%2C%26block%3AGateway%3A%3AGuildMemberAddPayload%2CContext-%3E%29-instance-method\">Client#on_guild_member_add</a></code> handler with a middleware chain.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L58","def":{"name":"on_guild_member_add","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_guild_member_add do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context)\nend\n"}},{"id":"on_guild_member_remove(*middleware,&block:Gateway::GuildMemberRemovePayload,Context->)-instance-method","html_id":"on_guild_member_remove(*middleware,&amp;block:Gateway::GuildMemberRemovePayload,Context-&gt;)-instance-method","name":"on_guild_member_remove","doc":"Creates a `Client#on_guild_member_remove` handler with a middleware chain and\ntrailing block. Handles a `Gateway::GuildMemberRemovePayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_guild_member_remove%28%2Amiddleware%2C%26block%3AGateway%3A%3AGuildMemberRemovePayload%2CContext-%3E%29-instance-method\">Client#on_guild_member_remove</a></code> handler with a middleware chain and trailing block.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware, &block : Gateway::GuildMemberRemovePayload, Context -> )","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L62","def":{"name":"on_guild_member_remove","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Gateway::GuildMemberRemovePayload, Context -> )"},"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_guild_member_remove do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context, 0, &block)\nend\n"}},{"id":"on_guild_member_remove(*middleware)-instance-method","html_id":"on_guild_member_remove(*middleware)-instance-method","name":"on_guild_member_remove","doc":"Creates a `Client#on_guild_member_remove` handler with a middleware chain.\nHandles a `Gateway::GuildMemberRemovePayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_guild_member_remove%28%2Amiddleware%2C%26block%3AGateway%3A%3AGuildMemberRemovePayload%2CContext-%3E%29-instance-method\">Client#on_guild_member_remove</a></code> handler with a middleware chain.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L62","def":{"name":"on_guild_member_remove","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_guild_member_remove do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context)\nend\n"}},{"id":"on_guild_member_update(*middleware,&block:Gateway::GuildMemberUpdatePayload,Context->)-instance-method","html_id":"on_guild_member_update(*middleware,&amp;block:Gateway::GuildMemberUpdatePayload,Context-&gt;)-instance-method","name":"on_guild_member_update","doc":"Creates a `Client#on_guild_member_update` handler with a middleware chain and\ntrailing block. Handles a `Gateway::GuildMemberUpdatePayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_guild_member_update%28%2Amiddleware%2C%26block%3AGateway%3A%3AGuildMemberUpdatePayload%2CContext-%3E%29-instance-method\">Client#on_guild_member_update</a></code> handler with a middleware chain and trailing block.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware, &block : Gateway::GuildMemberUpdatePayload, Context -> )","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L60","def":{"name":"on_guild_member_update","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Gateway::GuildMemberUpdatePayload, Context -> )"},"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_guild_member_update do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context, 0, &block)\nend\n"}},{"id":"on_guild_member_update(*middleware)-instance-method","html_id":"on_guild_member_update(*middleware)-instance-method","name":"on_guild_member_update","doc":"Creates a `Client#on_guild_member_update` handler with a middleware chain.\nHandles a `Gateway::GuildMemberUpdatePayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_guild_member_update%28%2Amiddleware%2C%26block%3AGateway%3A%3AGuildMemberUpdatePayload%2CContext-%3E%29-instance-method\">Client#on_guild_member_update</a></code> handler with a middleware chain.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L60","def":{"name":"on_guild_member_update","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_guild_member_update do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context)\nend\n"}},{"id":"on_guild_members_chunk(*middleware,&block:Gateway::GuildMembersChunkPayload,Context->)-instance-method","html_id":"on_guild_members_chunk(*middleware,&amp;block:Gateway::GuildMembersChunkPayload,Context-&gt;)-instance-method","name":"on_guild_members_chunk","doc":"Creates a `Client#on_guild_members_chunk` handler with a middleware chain and\ntrailing block. Handles a `Gateway::GuildMembersChunkPayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_guild_members_chunk%28%2Amiddleware%2C%26block%3AGateway%3A%3AGuildMembersChunkPayload%2CContext-%3E%29-instance-method\">Client#on_guild_members_chunk</a></code> handler with a middleware chain and trailing block.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware, &block : Gateway::GuildMembersChunkPayload, Context -> )","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L64","def":{"name":"on_guild_members_chunk","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Gateway::GuildMembersChunkPayload, Context -> )"},"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_guild_members_chunk do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context, 0, &block)\nend\n"}},{"id":"on_guild_members_chunk(*middleware)-instance-method","html_id":"on_guild_members_chunk(*middleware)-instance-method","name":"on_guild_members_chunk","doc":"Creates a `Client#on_guild_members_chunk` handler with a middleware chain.\nHandles a `Gateway::GuildMembersChunkPayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_guild_members_chunk%28%2Amiddleware%2C%26block%3AGateway%3A%3AGuildMembersChunkPayload%2CContext-%3E%29-instance-method\">Client#on_guild_members_chunk</a></code> handler with a middleware chain.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L64","def":{"name":"on_guild_members_chunk","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_guild_members_chunk do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context)\nend\n"}},{"id":"on_guild_role_create(*middleware)-instance-method","html_id":"on_guild_role_create(*middleware)-instance-method","name":"on_guild_role_create","doc":"Creates a `Client#on_guild_role_create` handler with a middleware chain.\nHandles a `Gateway::GuildRolePayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_guild_role_create%28%2Amiddleware%29-instance-method\">Client#on_guild_role_create</a></code> handler with a middleware chain.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L66","def":{"name":"on_guild_role_create","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_guild_role_create do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context)\nend\n"}},{"id":"on_guild_role_create(*middleware,&block:Gateway::GuildRolePayload,Context->)-instance-method","html_id":"on_guild_role_create(*middleware,&amp;block:Gateway::GuildRolePayload,Context-&gt;)-instance-method","name":"on_guild_role_create","doc":"Creates a `Client#on_guild_role_create` handler with a middleware chain and\ntrailing block. Handles a `Gateway::GuildRolePayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_guild_role_create%28%2Amiddleware%29-instance-method\">Client#on_guild_role_create</a></code> handler with a middleware chain and trailing block.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware, &block : Gateway::GuildRolePayload, Context -> )","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L66","def":{"name":"on_guild_role_create","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Gateway::GuildRolePayload, Context -> )"},"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_guild_role_create do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context, 0, &block)\nend\n"}},{"id":"on_guild_role_delete(*middleware)-instance-method","html_id":"on_guild_role_delete(*middleware)-instance-method","name":"on_guild_role_delete","doc":"Creates a `Client#on_guild_role_delete` handler with a middleware chain.\nHandles a `Gateway::GuildRoleDeletePayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_guild_role_delete%28%2Amiddleware%29-instance-method\">Client#on_guild_role_delete</a></code> handler with a middleware chain.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L70","def":{"name":"on_guild_role_delete","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_guild_role_delete do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context)\nend\n"}},{"id":"on_guild_role_delete(*middleware,&block:Gateway::GuildRoleDeletePayload,Context->)-instance-method","html_id":"on_guild_role_delete(*middleware,&amp;block:Gateway::GuildRoleDeletePayload,Context-&gt;)-instance-method","name":"on_guild_role_delete","doc":"Creates a `Client#on_guild_role_delete` handler with a middleware chain and\ntrailing block. Handles a `Gateway::GuildRoleDeletePayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_guild_role_delete%28%2Amiddleware%29-instance-method\">Client#on_guild_role_delete</a></code> handler with a middleware chain and trailing block.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware, &block : Gateway::GuildRoleDeletePayload, Context -> )","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L70","def":{"name":"on_guild_role_delete","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Gateway::GuildRoleDeletePayload, Context -> )"},"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_guild_role_delete do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context, 0, &block)\nend\n"}},{"id":"on_guild_role_update(*middleware)-instance-method","html_id":"on_guild_role_update(*middleware)-instance-method","name":"on_guild_role_update","doc":"Creates a `Client#on_guild_role_update` handler with a middleware chain.\nHandles a `Gateway::GuildRolePayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_guild_role_update%28%2Amiddleware%29-instance-method\">Client#on_guild_role_update</a></code> handler with a middleware chain.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L68","def":{"name":"on_guild_role_update","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_guild_role_update do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context)\nend\n"}},{"id":"on_guild_role_update(*middleware,&block:Gateway::GuildRolePayload,Context->)-instance-method","html_id":"on_guild_role_update(*middleware,&amp;block:Gateway::GuildRolePayload,Context-&gt;)-instance-method","name":"on_guild_role_update","doc":"Creates a `Client#on_guild_role_update` handler with a middleware chain and\ntrailing block. Handles a `Gateway::GuildRolePayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_guild_role_update%28%2Amiddleware%29-instance-method\">Client#on_guild_role_update</a></code> handler with a middleware chain and trailing block.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware, &block : Gateway::GuildRolePayload, Context -> )","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L68","def":{"name":"on_guild_role_update","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Gateway::GuildRolePayload, Context -> )"},"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_guild_role_update do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context, 0, &block)\nend\n"}},{"id":"on_guild_update(*middleware)-instance-method","html_id":"on_guild_update(*middleware)-instance-method","name":"on_guild_update","doc":"Creates a `Client#on_guild_update` handler with a middleware chain.\nHandles a `Guild` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_guild_update%28%2Amiddleware%29-instance-method\">Client#on_guild_update</a></code> handler with a middleware chain.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L46","def":{"name":"on_guild_update","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_guild_update do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context)\nend\n"}},{"id":"on_guild_update(*middleware,&block:Guild,Context->)-instance-method","html_id":"on_guild_update(*middleware,&amp;block:Guild,Context-&gt;)-instance-method","name":"on_guild_update","doc":"Creates a `Client#on_guild_update` handler with a middleware chain and\ntrailing block. Handles a `Guild` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_guild_update%28%2Amiddleware%29-instance-method\">Client#on_guild_update</a></code> handler with a middleware chain and trailing block.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware, &block : Guild, Context -> )","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L46","def":{"name":"on_guild_update","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Guild, Context -> )"},"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_guild_update do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context, 0, &block)\nend\n"}},{"id":"on_message_create(*middleware,&block:Message,Context->)-instance-method","html_id":"on_message_create(*middleware,&amp;block:Message,Context-&gt;)-instance-method","name":"on_message_create","doc":"Creates a `Client#on_message_create` handler with a middleware chain and\ntrailing block. Handles a `Message` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_message_create%28%2Amiddleware%2C%26block%3AMessage%2CContext-%3E%29-instance-method\">Client#on_message_create</a></code> handler with a middleware chain and trailing block.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware, &block : Message, Context -> )","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L72","def":{"name":"on_message_create","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Message, Context -> )"},"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_message_create do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context, 0, &block)\nend\n"}},{"id":"on_message_create(*middleware)-instance-method","html_id":"on_message_create(*middleware)-instance-method","name":"on_message_create","doc":"Creates a `Client#on_message_create` handler with a middleware chain.\nHandles a `Message` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_message_create%28%2Amiddleware%2C%26block%3AMessage%2CContext-%3E%29-instance-method\">Client#on_message_create</a></code> handler with a middleware chain.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L72","def":{"name":"on_message_create","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_message_create do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context)\nend\n"}},{"id":"on_message_delete(*middleware,&block:Gateway::MessageDeletePayload,Context->)-instance-method","html_id":"on_message_delete(*middleware,&amp;block:Gateway::MessageDeletePayload,Context-&gt;)-instance-method","name":"on_message_delete","doc":"Creates a `Client#on_message_delete` handler with a middleware chain and\ntrailing block. Handles a `Gateway::MessageDeletePayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_message_delete%28%2Amiddleware%2C%26block%3AGateway%3A%3AMessageDeletePayload%2CContext-%3E%29-instance-method\">Client#on_message_delete</a></code> handler with a middleware chain and trailing block.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware, &block : Gateway::MessageDeletePayload, Context -> )","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L82","def":{"name":"on_message_delete","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Gateway::MessageDeletePayload, Context -> )"},"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_message_delete do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context, 0, &block)\nend\n"}},{"id":"on_message_delete(*middleware)-instance-method","html_id":"on_message_delete(*middleware)-instance-method","name":"on_message_delete","doc":"Creates a `Client#on_message_delete` handler with a middleware chain.\nHandles a `Gateway::MessageDeletePayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_message_delete%28%2Amiddleware%2C%26block%3AGateway%3A%3AMessageDeletePayload%2CContext-%3E%29-instance-method\">Client#on_message_delete</a></code> handler with a middleware chain.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L82","def":{"name":"on_message_delete","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_message_delete do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context)\nend\n"}},{"id":"on_message_delete_bulk(*middleware,&block:Gateway::MessageDeleteBulkPayload,Context->)-instance-method","html_id":"on_message_delete_bulk(*middleware,&amp;block:Gateway::MessageDeleteBulkPayload,Context-&gt;)-instance-method","name":"on_message_delete_bulk","doc":"Creates a `Client#on_message_delete_bulk` handler with a middleware chain and\ntrailing block. Handles a `Gateway::MessageDeleteBulkPayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_message_delete_bulk%28%2Amiddleware%2C%26block%3AGateway%3A%3AMessageDeleteBulkPayload%2CContext-%3E%29-instance-method\">Client#on_message_delete_bulk</a></code> handler with a middleware chain and trailing block.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware, &block : Gateway::MessageDeleteBulkPayload, Context -> )","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L84","def":{"name":"on_message_delete_bulk","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Gateway::MessageDeleteBulkPayload, Context -> )"},"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_message_delete_bulk do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context, 0, &block)\nend\n"}},{"id":"on_message_delete_bulk(*middleware)-instance-method","html_id":"on_message_delete_bulk(*middleware)-instance-method","name":"on_message_delete_bulk","doc":"Creates a `Client#on_message_delete_bulk` handler with a middleware chain.\nHandles a `Gateway::MessageDeleteBulkPayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_message_delete_bulk%28%2Amiddleware%2C%26block%3AGateway%3A%3AMessageDeleteBulkPayload%2CContext-%3E%29-instance-method\">Client#on_message_delete_bulk</a></code> handler with a middleware chain.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L84","def":{"name":"on_message_delete_bulk","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_message_delete_bulk do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context)\nend\n"}},{"id":"on_message_reaction_add(*middleware,&block:Gateway::MessageReactionPayload,Context->)-instance-method","html_id":"on_message_reaction_add(*middleware,&amp;block:Gateway::MessageReactionPayload,Context-&gt;)-instance-method","name":"on_message_reaction_add","doc":"Creates a `Client#on_message_reaction_add` handler with a middleware chain and\ntrailing block. Handles a `Gateway::MessageReactionPayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_message_reaction_add%28%2Amiddleware%2C%26block%3AGateway%3A%3AMessageReactionPayload%2CContext-%3E%29-instance-method\">Client#on_message_reaction_add</a></code> handler with a middleware chain and trailing block.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware, &block : Gateway::MessageReactionPayload, Context -> )","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L74","def":{"name":"on_message_reaction_add","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Gateway::MessageReactionPayload, Context -> )"},"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_message_reaction_add do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context, 0, &block)\nend\n"}},{"id":"on_message_reaction_add(*middleware)-instance-method","html_id":"on_message_reaction_add(*middleware)-instance-method","name":"on_message_reaction_add","doc":"Creates a `Client#on_message_reaction_add` handler with a middleware chain.\nHandles a `Gateway::MessageReactionPayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_message_reaction_add%28%2Amiddleware%2C%26block%3AGateway%3A%3AMessageReactionPayload%2CContext-%3E%29-instance-method\">Client#on_message_reaction_add</a></code> handler with a middleware chain.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L74","def":{"name":"on_message_reaction_add","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_message_reaction_add do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context)\nend\n"}},{"id":"on_message_reaction_remove(*middleware,&block:Gateway::MessageReactionPayload,Context->)-instance-method","html_id":"on_message_reaction_remove(*middleware,&amp;block:Gateway::MessageReactionPayload,Context-&gt;)-instance-method","name":"on_message_reaction_remove","doc":"Creates a `Client#on_message_reaction_remove` handler with a middleware chain and\ntrailing block. Handles a `Gateway::MessageReactionPayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_message_reaction_remove%28%2Amiddleware%2C%26block%3AGateway%3A%3AMessageReactionPayload%2CContext-%3E%29-instance-method\">Client#on_message_reaction_remove</a></code> handler with a middleware chain and trailing block.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware, &block : Gateway::MessageReactionPayload, Context -> )","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L76","def":{"name":"on_message_reaction_remove","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Gateway::MessageReactionPayload, Context -> )"},"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_message_reaction_remove do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context, 0, &block)\nend\n"}},{"id":"on_message_reaction_remove(*middleware)-instance-method","html_id":"on_message_reaction_remove(*middleware)-instance-method","name":"on_message_reaction_remove","doc":"Creates a `Client#on_message_reaction_remove` handler with a middleware chain.\nHandles a `Gateway::MessageReactionPayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_message_reaction_remove%28%2Amiddleware%2C%26block%3AGateway%3A%3AMessageReactionPayload%2CContext-%3E%29-instance-method\">Client#on_message_reaction_remove</a></code> handler with a middleware chain.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L76","def":{"name":"on_message_reaction_remove","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_message_reaction_remove do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context)\nend\n"}},{"id":"on_message_reaction_remove_all(*middleware)-instance-method","html_id":"on_message_reaction_remove_all(*middleware)-instance-method","name":"on_message_reaction_remove_all","doc":"Creates a `Client#on_message_reaction_remove_all` handler with a middleware chain.\nHandles a `Gateway::MessageReactionRemoveAllPayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_message_reaction_remove_all%28%2Amiddleware%29-instance-method\">Client#on_message_reaction_remove_all</a></code> handler with a middleware chain.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L78","def":{"name":"on_message_reaction_remove_all","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_message_reaction_remove_all do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context)\nend\n"}},{"id":"on_message_reaction_remove_all(*middleware,&block:Gateway::MessageReactionRemoveAllPayload,Context->)-instance-method","html_id":"on_message_reaction_remove_all(*middleware,&amp;block:Gateway::MessageReactionRemoveAllPayload,Context-&gt;)-instance-method","name":"on_message_reaction_remove_all","doc":"Creates a `Client#on_message_reaction_remove_all` handler with a middleware chain and\ntrailing block. Handles a `Gateway::MessageReactionRemoveAllPayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_message_reaction_remove_all%28%2Amiddleware%29-instance-method\">Client#on_message_reaction_remove_all</a></code> handler with a middleware chain and trailing block.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware, &block : Gateway::MessageReactionRemoveAllPayload, Context -> )","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L78","def":{"name":"on_message_reaction_remove_all","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Gateway::MessageReactionRemoveAllPayload, Context -> )"},"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_message_reaction_remove_all do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context, 0, &block)\nend\n"}},{"id":"on_message_update(*middleware,&block:Gateway::MessageUpdatePayload,Context->)-instance-method","html_id":"on_message_update(*middleware,&amp;block:Gateway::MessageUpdatePayload,Context-&gt;)-instance-method","name":"on_message_update","doc":"Creates a `Client#on_message_update` handler with a middleware chain and\ntrailing block. Handles a `Gateway::MessageUpdatePayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_message_update%28%2Amiddleware%2C%26block%3AGateway%3A%3AMessageUpdatePayload%2CContext-%3E%29-instance-method\">Client#on_message_update</a></code> handler with a middleware chain and trailing block.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware, &block : Gateway::MessageUpdatePayload, Context -> )","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L80","def":{"name":"on_message_update","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Gateway::MessageUpdatePayload, Context -> )"},"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_message_update do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context, 0, &block)\nend\n"}},{"id":"on_message_update(*middleware)-instance-method","html_id":"on_message_update(*middleware)-instance-method","name":"on_message_update","doc":"Creates a `Client#on_message_update` handler with a middleware chain.\nHandles a `Gateway::MessageUpdatePayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_message_update%28%2Amiddleware%2C%26block%3AGateway%3A%3AMessageUpdatePayload%2CContext-%3E%29-instance-method\">Client#on_message_update</a></code> handler with a middleware chain.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L80","def":{"name":"on_message_update","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_message_update do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context)\nend\n"}},{"id":"on_presence_update(*middleware)-instance-method","html_id":"on_presence_update(*middleware)-instance-method","name":"on_presence_update","doc":"Creates a `Client#on_presence_update` handler with a middleware chain.\nHandles a `Gateway::PresenceUpdatePayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_presence_update%28%2Amiddleware%29-instance-method\">Client#on_presence_update</a></code> handler with a middleware chain.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L86","def":{"name":"on_presence_update","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_presence_update do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context)\nend\n"}},{"id":"on_presence_update(*middleware,&block:Gateway::PresenceUpdatePayload,Context->)-instance-method","html_id":"on_presence_update(*middleware,&amp;block:Gateway::PresenceUpdatePayload,Context-&gt;)-instance-method","name":"on_presence_update","doc":"Creates a `Client#on_presence_update` handler with a middleware chain and\ntrailing block. Handles a `Gateway::PresenceUpdatePayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_presence_update%28%2Amiddleware%29-instance-method\">Client#on_presence_update</a></code> handler with a middleware chain and trailing block.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware, &block : Gateway::PresenceUpdatePayload, Context -> )","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L86","def":{"name":"on_presence_update","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Gateway::PresenceUpdatePayload, Context -> )"},"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_presence_update do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context, 0, &block)\nend\n"}},{"id":"on_ready(*middleware)-instance-method","html_id":"on_ready(*middleware)-instance-method","name":"on_ready","doc":"Creates a `Client#on_ready` handler with a middleware chain.\nHandles a `Gateway::ReadyPayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_ready%28%2Amiddleware%29-instance-method\">Client#on_ready</a></code> handler with a middleware chain.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L34","def":{"name":"on_ready","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_ready do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context)\nend\n"}},{"id":"on_ready(*middleware,&block:Gateway::ReadyPayload,Context->)-instance-method","html_id":"on_ready(*middleware,&amp;block:Gateway::ReadyPayload,Context-&gt;)-instance-method","name":"on_ready","doc":"Creates a `Client#on_ready` handler with a middleware chain and\ntrailing block. Handles a `Gateway::ReadyPayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_ready%28%2Amiddleware%29-instance-method\">Client#on_ready</a></code> handler with a middleware chain and trailing block.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware, &block : Gateway::ReadyPayload, Context -> )","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L34","def":{"name":"on_ready","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Gateway::ReadyPayload, Context -> )"},"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_ready do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context, 0, &block)\nend\n"}},{"id":"on_resumed(*middleware,&block:Gateway::ResumedPayload,Context->)-instance-method","html_id":"on_resumed(*middleware,&amp;block:Gateway::ResumedPayload,Context-&gt;)-instance-method","name":"on_resumed","doc":"Creates a `Client#on_resumed` handler with a middleware chain and\ntrailing block. Handles a `Gateway::ResumedPayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_resumed%28%2Amiddleware%2C%26block%3AGateway%3A%3AResumedPayload%2CContext-%3E%29-instance-method\">Client#on_resumed</a></code> handler with a middleware chain and trailing block.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware, &block : Gateway::ResumedPayload, Context -> )","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L36","def":{"name":"on_resumed","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Gateway::ResumedPayload, Context -> )"},"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_resumed do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context, 0, &block)\nend\n"}},{"id":"on_resumed(*middleware)-instance-method","html_id":"on_resumed(*middleware)-instance-method","name":"on_resumed","doc":"Creates a `Client#on_resumed` handler with a middleware chain.\nHandles a `Gateway::ResumedPayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_resumed%28%2Amiddleware%2C%26block%3AGateway%3A%3AResumedPayload%2CContext-%3E%29-instance-method\">Client#on_resumed</a></code> handler with a middleware chain.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L36","def":{"name":"on_resumed","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_resumed do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context)\nend\n"}},{"id":"on_typing_start(*middleware,&block:Gateway::TypingStartPayload,Context->)-instance-method","html_id":"on_typing_start(*middleware,&amp;block:Gateway::TypingStartPayload,Context-&gt;)-instance-method","name":"on_typing_start","doc":"Creates a `Client#on_typing_start` handler with a middleware chain and\ntrailing block. Handles a `Gateway::TypingStartPayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_typing_start%28%2Amiddleware%2C%26block%3AGateway%3A%3ATypingStartPayload%2CContext-%3E%29-instance-method\">Client#on_typing_start</a></code> handler with a middleware chain and trailing block.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware, &block : Gateway::TypingStartPayload, Context -> )","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L88","def":{"name":"on_typing_start","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Gateway::TypingStartPayload, Context -> )"},"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_typing_start do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context, 0, &block)\nend\n"}},{"id":"on_typing_start(*middleware)-instance-method","html_id":"on_typing_start(*middleware)-instance-method","name":"on_typing_start","doc":"Creates a `Client#on_typing_start` handler with a middleware chain.\nHandles a `Gateway::TypingStartPayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_typing_start%28%2Amiddleware%2C%26block%3AGateway%3A%3ATypingStartPayload%2CContext-%3E%29-instance-method\">Client#on_typing_start</a></code> handler with a middleware chain.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L88","def":{"name":"on_typing_start","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_typing_start do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context)\nend\n"}},{"id":"on_user_update(*middleware,&block:User,Context->)-instance-method","html_id":"on_user_update(*middleware,&amp;block:User,Context-&gt;)-instance-method","name":"on_user_update","doc":"Creates a `Client#on_user_update` handler with a middleware chain and\ntrailing block. Handles a `User` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_user_update%28%2Amiddleware%2C%26block%3AUser%2CContext-%3E%29-instance-method\">Client#on_user_update</a></code> handler with a middleware chain and trailing block.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware, &block : User, Context -> )","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L90","def":{"name":"on_user_update","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(User, Context -> )"},"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_user_update do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context, 0, &block)\nend\n"}},{"id":"on_user_update(*middleware)-instance-method","html_id":"on_user_update(*middleware)-instance-method","name":"on_user_update","doc":"Creates a `Client#on_user_update` handler with a middleware chain.\nHandles a `User` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_user_update%28%2Amiddleware%2C%26block%3AUser%2CContext-%3E%29-instance-method\">Client#on_user_update</a></code> handler with a middleware chain.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L90","def":{"name":"on_user_update","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_user_update do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context)\nend\n"}},{"id":"on_voice_server_update(*middleware,&block:Gateway::VoiceServerUpdatePayload,Context->)-instance-method","html_id":"on_voice_server_update(*middleware,&amp;block:Gateway::VoiceServerUpdatePayload,Context-&gt;)-instance-method","name":"on_voice_server_update","doc":"Creates a `Client#on_voice_server_update` handler with a middleware chain and\ntrailing block. Handles a `Gateway::VoiceServerUpdatePayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_voice_server_update%28%2Amiddleware%2C%26block%3AGateway%3A%3AVoiceServerUpdatePayload%2CContext-%3E%29-instance-method\">Client#on_voice_server_update</a></code> handler with a middleware chain and trailing block.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware, &block : Gateway::VoiceServerUpdatePayload, Context -> )","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L94","def":{"name":"on_voice_server_update","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Gateway::VoiceServerUpdatePayload, Context -> )"},"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_voice_server_update do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context, 0, &block)\nend\n"}},{"id":"on_voice_server_update(*middleware)-instance-method","html_id":"on_voice_server_update(*middleware)-instance-method","name":"on_voice_server_update","doc":"Creates a `Client#on_voice_server_update` handler with a middleware chain.\nHandles a `Gateway::VoiceServerUpdatePayload` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_voice_server_update%28%2Amiddleware%2C%26block%3AGateway%3A%3AVoiceServerUpdatePayload%2CContext-%3E%29-instance-method\">Client#on_voice_server_update</a></code> handler with a middleware chain.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L94","def":{"name":"on_voice_server_update","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_voice_server_update do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context)\nend\n"}},{"id":"on_voice_state_update(*middleware,&block:VoiceState,Context->)-instance-method","html_id":"on_voice_state_update(*middleware,&amp;block:VoiceState,Context-&gt;)-instance-method","name":"on_voice_state_update","doc":"Creates a `Client#on_voice_state_update` handler with a middleware chain and\ntrailing block. Handles a `VoiceState` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_voice_state_update%28%2Amiddleware%2C%26block%3AVoiceState%2CContext-%3E%29-instance-method\">Client#on_voice_state_update</a></code> handler with a middleware chain and trailing block.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware, &block : VoiceState, Context -> )","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L92","def":{"name":"on_voice_state_update","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(VoiceState, Context -> )"},"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_voice_state_update do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context, 0, &block)\nend\n"}},{"id":"on_voice_state_update(*middleware)-instance-method","html_id":"on_voice_state_update(*middleware)-instance-method","name":"on_voice_state_update","doc":"Creates a `Client#on_voice_state_update` handler with a middleware chain.\nHandles a `VoiceState` payload.","summary":"<p>Creates a <code><a href=\"../Discord/Client.html#on_voice_state_update%28%2Amiddleware%2C%26block%3AVoiceState%2CContext-%3E%29-instance-method\">Client#on_voice_state_update</a></code> handler with a middleware chain.</p>","abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"args_string":"(*middleware)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L92","def":{"name":"on_voice_state_update","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"stack = Stack.new(*middleware)\non_voice_state_update do |payload|\n  context = Discord::Context.new\n  context.put(self)\n  middleware.each do |mw|\n    context.put(mw)\n  end\n  stack.run(payload, context)\nend\n"}}],"macros":[{"id":"stack_event(event_name,klass)-macro","html_id":"stack_event(event_name,klass)-macro","name":"stack_event","doc":null,"summary":null,"abstract":false,"args":[{"name":"event_name","doc":null,"default_value":"","external_name":"event_name","restriction":""},{"name":"klass","doc":null,"default_value":"","external_name":"klass","restriction":""}],"args_string":"(event_name, klass)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware.cr#L6","def":{"name":"stack_event","args":[{"name":"event_name","doc":null,"default_value":"","external_name":"event_name","restriction":""},{"name":"klass","doc":null,"default_value":"","external_name":"klass","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n# Creates a `Client#on_\n{{ event_name }}\n` handler with a middleware chain and\n\n      \n# trailing block. Handles a `\n{{ klass }}\n` payload.\n\n      def on_\n{{ event_name }}\n(*middleware, &block : \n{{ klass }}\n, Context ->)\n        stack = Stack.new(*middleware)\n        on_\n{{ event_name }}\n do |payload|\n          context = Discord::Context.new\n          context.put(self)\n          middleware.each \n{ |mw| context.put mw }\n          stack.run(payload, context, 0, &block)\n        \nend\n      \nend\n\n      \n# Creates a `Client#on_\n{{ event_name }}\n` handler with a middleware chain.\n\n      \n# Handles a `\n{{ klass }}\n` payload.\n\n      def on_\n{{ event_name }}\n(*middleware)\n        stack = Stack.new(*middleware)\n        on_\n{{ event_name }}\n do |payload|\n          context = Discord::Context.new\n          context.put(self)\n          middleware.each \n{ |mw| context.put mw }\n          stack.run(payload, context)\n        \nend\n      \nend\n    \n"}}],"types":[]},{"html_id":"github.com/z64/discordcr-middleware/Discord/Context","path":"Discord/Context.html","kind":"class","full_name":"Discord::Context","name":"Context","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr-middleware/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/z64/discordcr-middleware/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/z64/discordcr-middleware/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr-middleware/context.cr","line_number":26,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/context.cr"}],"repository_name":"github.com/z64/discordcr-middleware","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr-middleware/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":"A `Context` instance is a container that can be used to store any kind of\nclass to be later recalled:\n```\nclass Foo\n  getter value\n\n  def initialize(@value : Int32)\n  end\nend\n\nclass Bar\n  getter value\n\n  def initialize(@value : String)\n  end\nend\n\ncontext = Context.new\ncontext.put Foo.new(1337)\ncontext.put Bar.new(\"discord\")\n\ncontext[Foo].value # => 1337\ncontext[Bar].value # => \"discord\"\n```","summary":"<p>A <code><a href=\"../Discord/Context.html\">Context</a></code> instance is a container that can be used to store any kind of class to be later recalled: <code></code>` class Foo   getter value</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"[](clazz:T.class):TforallT-instance-method","html_id":"[](clazz:T.class):TforallT-instance-method","name":"[]","doc":"Access a stored value by class","summary":"<p>Access a stored value by class</p>","abstract":false,"args":[{"name":"clazz","doc":null,"default_value":"","external_name":"clazz","restriction":"T.class"}],"args_string":"(clazz : <span class=\"t\">T</span>.<span class=\"k\">class</span>) : T forall T","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/context.cr#L30","def":{"name":"[]","args":[{"name":"clazz","doc":null,"default_value":"","external_name":"clazz","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"if reference = @extensions[clazz.crystal_type_id]?\n  reference.unsafe_as(T)\nelse\n  raise(KeyError.new(\"Missing reference in context to #{T}\"))\nend"}},{"id":"put(extension:T)forallT-instance-method","html_id":"put(extension:T)forallT-instance-method","name":"put","doc":"Store an object in this class. The object must be a `class`.","summary":"<p>Store an object in this class.</p>","abstract":false,"args":[{"name":"extension","doc":null,"default_value":"","external_name":"extension","restriction":"T"}],"args_string":"(extension : T) forall T","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/context.cr#L39","def":{"name":"put","args":[{"name":"extension","doc":null,"default_value":"","external_name":"extension","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{% unless T < Reference\n  raise(\"Extension #{T} must be a class\")\nend %}\nif (sizeof(typeof(extension))) == (sizeof(::Pointer(Void)))\nelse\n  raise(\"BUG: Reference isn't sizeof(Void*)!\")\nend\n@extensions[extension.class.crystal_type_id] = extension.unsafe_as(Pointer(Void))\n"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr-middleware/Discord/Stack","path":"Discord/Stack.html","kind":"class","full_name":"Discord::Stack(*T)","name":"Stack","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr-middleware/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/z64/discordcr-middleware/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/z64/discordcr-middleware/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr-middleware/stack.cr","line_number":44,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/stack.cr"}],"repository_name":"github.com/z64/discordcr-middleware","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr-middleware/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":"A `Stack` is a generic container for a chain of middleware.\n\nA middleware can be *any* class that implements\n`def call(payload, context, &block)`.\n\nWhen `#run` is passed a payload, it is passed into the first middleware. If\nany middleware in the chain does not `yield`, execution of the rest of the\nchain will stop.\n\n`#run` can also be invoked with a block that also accepts the payload and\n`Context`, which will be called after all middleware successfully run.\n\n```\nclass Middleware\n  def call(payload, context)\n    # Make this middleware available in context for later\n    context.put self\n\n    # Do some checks against payload\n    even = (payload % 2).zero?\n\n    # Store some things in context\n    context.put payload * 2\n\n    yield if even\n  end\nend\n\nstack = Stack.new(Middleware.new)\nstack.run(2) do |payload, context|\n  payload             # => 2\n  context[Middleware] # => 4\nend\n\nstack.run(1) do |payload, context|\n  # Code here is never run!\nend\n```\n\nNOTE: While you can implement `Stack` yourself, it is already implemented\ninternally around the `Client` handler methods. The above example is shown\nfor completeness.","summary":"<p>A <code><a href=\"../Discord/Stack.html\">Stack</a></code> is a generic container for a chain of middleware.</p>","class_methods":[],"constructors":[{"id":"new(*middlewares:*T)-class-method","html_id":"new(*middlewares:*T)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"middlewares","doc":null,"default_value":"","external_name":"middlewares","restriction":"*T"}],"args_string":"(*middlewares : <span class=\"o\">*</span><span class=\"t\">T</span>)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/stack.cr#L47","def":{"name":"new","args":[{"name":"middlewares","doc":null,"default_value":"","external_name":"middlewares","restriction":"*T"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Stack(*T).allocate\n_.initialize(*middlewares)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"run(payload:U,context:Context=Context.new,index=0,&block:U,Context->)forallU-instance-method","html_id":"run(payload:U,context:Context=Context.new,index=0,&amp;block:U,Context-&gt;)forallU-instance-method","name":"run","doc":"Runs a message through this middleware stack, with a trailing block","summary":"<p>Runs a message through this middleware stack, with a trailing block</p>","abstract":false,"args":[{"name":"payload","doc":null,"default_value":"","external_name":"payload","restriction":"U"},{"name":"context","doc":null,"default_value":"Context.new","external_name":"context","restriction":"Context"},{"name":"index","doc":null,"default_value":"0","external_name":"index","restriction":""}],"args_string":"(payload : U, context : Context = <span class=\"t\">Context</span>.<span class=\"k\">new</span>, index = <span class=\"n\">0</span>, &block : U, Context -> ) forall U","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/stack.cr#L52","def":{"name":"run","args":[{"name":"payload","doc":null,"default_value":"","external_name":"payload","restriction":"U"},{"name":"context","doc":null,"default_value":"Context.new","external_name":"context","restriction":"Context"},{"name":"index","doc":null,"default_value":"0","external_name":"index","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(U, Context -> )"},"return_type":"","visibility":"Public","body":"if mw = @middlewares[index]?\n  mw.call(payload, context) do\n    run(payload, context, index + 1, &block)\n  end\nelse\n  yield payload, context\nend"}},{"id":"run(payload:U,context:Discord::Context=Context.new,index=0)forallU-instance-method","html_id":"run(payload:U,context:Discord::Context=Context.new,index=0)forallU-instance-method","name":"run","doc":"Runs a message through this middleware stack","summary":"<p>Runs a message through this middleware stack</p>","abstract":false,"args":[{"name":"payload","doc":null,"default_value":"","external_name":"payload","restriction":"U"},{"name":"context","doc":null,"default_value":"Context.new","external_name":"context","restriction":"Discord::Context"},{"name":"index","doc":null,"default_value":"0","external_name":"index","restriction":""}],"args_string":"(payload : U, context : Discord::Context = <span class=\"t\">Context</span>.<span class=\"k\">new</span>, index = <span class=\"n\">0</span>) forall U","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/stack.cr#L62","def":{"name":"run","args":[{"name":"payload","doc":null,"default_value":"","external_name":"payload","restriction":"U"},{"name":"context","doc":null,"default_value":"Context.new","external_name":"context","restriction":"Discord::Context"},{"name":"index","doc":null,"default_value":"0","external_name":"index","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if mw = @middlewares[index]?\n  mw.call(payload, context) do\n    run(payload, context, index + 1)\n  end\nend"}}],"macros":[],"types":[]}]},{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware","path":"DiscordMiddleware.html","kind":"module","full_name":"DiscordMiddleware","name":"DiscordMiddleware","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"discordcr-middleware/version.cr","line_number":1,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/version.cr"},{"filename":"discordcr-middleware/middleware/cached_event.cr","line_number":3,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/cached_event.cr"},{"filename":"discordcr-middleware/middleware/rate_limiter.cr","line_number":3,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/rate_limiter.cr"}],"repository_name":"github.com/z64/discordcr-middleware","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.4.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware/AttributeMiddleware","path":"DiscordMiddleware/AttributeMiddleware.html","kind":"module","full_name":"DiscordMiddleware::AttributeMiddleware","name":"AttributeMiddleware","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"discordcr-middleware/middleware/attribute.cr","line_number":3,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/attribute.cr"}],"repository_name":"github.com/z64/discordcr-middleware","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware/Author","kind":"class","full_name":"DiscordMiddleware::Author","name":"Author"},{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware/Channel","kind":"class","full_name":"DiscordMiddleware::Channel","name":"Channel"}],"namespace":{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware","kind":"module","full_name":"DiscordMiddleware","name":"DiscordMiddleware"},"doc":"Helper module for validating middleware attributes\nagainst the attributes of another object","summary":"<p>Helper module for validating middleware attributes against the attributes of another object</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"check_attributes(object)-macro","html_id":"check_attributes(object)-macro","name":"check_attributes","doc":null,"summary":null,"abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":""}],"args_string":"(object)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/attribute.cr#L4","def":{"name":"check_attributes","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% for var in @type.instance_vars %}\n      if attr = {{ object }}.{{ var.id }}\n        if value = @{{ var.id }}\n          return unless attr == value\n        end\n      end\n    {% end %}\n\n  \n"}}],"types":[]},{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware/Author","path":"DiscordMiddleware/Author.html","kind":"class","full_name":"DiscordMiddleware::Author","name":"Author","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr-middleware/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware/AttributeMiddleware","kind":"module","full_name":"DiscordMiddleware::AttributeMiddleware","name":"AttributeMiddleware"},{"html_id":"github.com/z64/discordcr-middleware/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/z64/discordcr-middleware/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr-middleware/middleware/author.cr","line_number":5,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/author.cr"}],"repository_name":"github.com/z64/discordcr-middleware","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware/AttributeMiddleware","kind":"module","full_name":"DiscordMiddleware::AttributeMiddleware","name":"AttributeMiddleware"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware","kind":"module","full_name":"DiscordMiddleware","name":"DiscordMiddleware"},"doc":"Matches the author the message event was raised with based\non several different attributes.","summary":"<p>Matches the author the message event was raised with based on several different attributes.</p>","class_methods":[],"constructors":[{"id":"new(id:UInt64?=nil,username:String?=nil,discriminator:String?=nil,bot:Bool?=nil)-class-method","html_id":"new(id:UInt64?=nil,username:String?=nil,discriminator:String?=nil,bot:Bool?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"id","doc":null,"default_value":"nil","external_name":"id","restriction":"UInt64 | ::Nil"},{"name":"username","doc":null,"default_value":"nil","external_name":"username","restriction":"String | ::Nil"},{"name":"discriminator","doc":null,"default_value":"nil","external_name":"discriminator","restriction":"String | ::Nil"},{"name":"bot","doc":null,"default_value":"nil","external_name":"bot","restriction":"Bool | ::Nil"}],"args_string":"(id : UInt64? = <span class=\"n\">nil</span>, username : String? = <span class=\"n\">nil</span>, discriminator : String? = <span class=\"n\">nil</span>, bot : Bool? = <span class=\"n\">nil</span>)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/author.cr#L8","def":{"name":"new","args":[{"name":"id","doc":null,"default_value":"nil","external_name":"id","restriction":"UInt64 | ::Nil"},{"name":"username","doc":null,"default_value":"nil","external_name":"username","restriction":"String | ::Nil"},{"name":"discriminator","doc":null,"default_value":"nil","external_name":"discriminator","restriction":"String | ::Nil"},{"name":"bot","doc":null,"default_value":"nil","external_name":"bot","restriction":"Bool | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(id, username, discriminator, bot)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(payload:Discord::Message,context:Discord::Context,&block)-instance-method","html_id":"call(payload:Discord::Message,context:Discord::Context,&amp;block)-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"payload","doc":null,"default_value":"","external_name":"payload","restriction":"Discord::Message"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"Discord::Context"}],"args_string":"(payload : Discord::Message, context : Discord::Context, &block)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/author.cr#L12","def":{"name":"call","args":[{"name":"payload","doc":null,"default_value":"","external_name":"payload","restriction":"Discord::Message"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"Discord::Context"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"author = payload.author\ncheck_attributes(author)\nyield\n"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware/CachedEvent","path":"DiscordMiddleware/CachedEvent.html","kind":"class","full_name":"DiscordMiddleware::CachedEvent","name":"CachedEvent","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr-middleware/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware/CachedRoutes","kind":"module","full_name":"DiscordMiddleware::CachedRoutes","name":"CachedRoutes"},{"html_id":"github.com/z64/discordcr-middleware/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/z64/discordcr-middleware/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr-middleware/middleware/cached_event.cr","line_number":22,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/cached_event.cr"}],"repository_name":"github.com/z64/discordcr-middleware","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware/CachedRoutes","kind":"module","full_name":"DiscordMiddleware::CachedRoutes","name":"CachedRoutes"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware","kind":"module","full_name":"DiscordMiddleware","name":"DiscordMiddleware"},"doc":"When a message is passed through this middleware, it caches several\ncommon properties one might make for typical commands:\n- The channel the message was from\n- The guild the message was from\n- The member the message was from\n- The member's roles\n```\nclient.on_message_create(\n  DiscordMiddleware::Prefix.new(\"!info\"),\n  DiscordMiddleware::CachedEvent.new) do |payload, context|\n  cached = context[DiscordMiddleware::CachedEvent::Result]\n  cached.channel      # => Channel\n  cached.guild        # => Guild?\n  cached.member       # => Member?\n  cached.member_roles # => Array(Role)?\nend\n```\nIf the cache is enabled on the client (recommended) it will be used.","summary":"<p>When a message is passed through this middleware, it caches several common properties one might make for typical commands: - The channel the message was from - The guild the message was from - The member the message was from - The member's roles <code></code>` client.on_message_create(   DiscordMiddleware::Prefix.new(\"!info\"),   DiscordMiddleware::CachedEvent.new) do |payload, context|   cached = context[DiscordMiddleware::CachedEvent::Result]   cached.channel      # => Channel   cached.guild        # => Guild?   cached.member       # => Member?   cached.member_roles # => Array(Role)? end <code></code>` If the cache is enabled on the client (recommended) it will be used.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"call(payload:Discord::Message,context:Discord::Context,&block)-instance-method","html_id":"call(payload:Discord::Message,context:Discord::Context,&amp;block)-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"payload","doc":null,"default_value":"","external_name":"payload","restriction":"Discord::Message"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"Discord::Context"}],"args_string":"(payload : Discord::Message, context : Discord::Context, &block)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/cached_event.cr#L37","def":{"name":"call","args":[{"name":"payload","doc":null,"default_value":"","external_name":"payload","restriction":"Discord::Message"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"Discord::Context"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"client = context[Discord::Client]\nchannel = get_channel(client, payload.channel_id)\nif guild_id = channel.guild_id\n  guild = get_guild(client, guild_id)\n  member = get_member(client, guild_id, payload.author.id)\n  member_roles = guild.roles.select do |r|\n    member.roles.includes?(r.id)\n  end\n  context.put(Result.new(channel, guild, member, member_roles))\nelse\n  context.put(Result.new(channel))\nend\nyield\n"}}],"macros":[],"types":[{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware/CachedEvent/Result","path":"DiscordMiddleware/CachedEvent/Result.html","kind":"class","full_name":"DiscordMiddleware::CachedEvent::Result","name":"Result","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr-middleware/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/z64/discordcr-middleware/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/z64/discordcr-middleware/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr-middleware/middleware/cached_event.cr","line_number":25,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/cached_event.cr"}],"repository_name":"github.com/z64/discordcr-middleware","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware/CachedEvent","kind":"class","full_name":"DiscordMiddleware::CachedEvent","name":"CachedEvent"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(channel:Discord::Channel,guild:Discord::Guild?=nil,member:Discord::GuildMember?=nil,member_roles:Array(Discord::Role)?=nil)-class-method","html_id":"new(channel:Discord::Channel,guild:Discord::Guild?=nil,member:Discord::GuildMember?=nil,member_roles:Array(Discord::Role)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"channel","doc":null,"default_value":"","external_name":"channel","restriction":"Discord::Channel"},{"name":"guild","doc":null,"default_value":"nil","external_name":"guild","restriction":"Discord::Guild | ::Nil"},{"name":"member","doc":null,"default_value":"nil","external_name":"member","restriction":"Discord::GuildMember | ::Nil"},{"name":"member_roles","doc":null,"default_value":"nil","external_name":"member_roles","restriction":"Array(Discord::Role) | ::Nil"}],"args_string":"(channel : Discord::Channel, guild : Discord::Guild? = <span class=\"n\">nil</span>, member : Discord::GuildMember? = <span class=\"n\">nil</span>, member_roles : Array(Discord::Role)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/cached_event.cr#L31","def":{"name":"new","args":[{"name":"channel","doc":null,"default_value":"","external_name":"channel","restriction":"Discord::Channel"},{"name":"guild","doc":null,"default_value":"nil","external_name":"guild","restriction":"Discord::Guild | ::Nil"},{"name":"member","doc":null,"default_value":"nil","external_name":"member","restriction":"Discord::GuildMember | ::Nil"},{"name":"member_roles","doc":null,"default_value":"nil","external_name":"member_roles","restriction":"Array(Discord::Role) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(channel, guild, member, member_roles)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"channel:Discord::Channel-instance-method","html_id":"channel:Discord::Channel-instance-method","name":"channel","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::Channel","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/cached_event.cr#L28","def":{"name":"channel","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Discord::Channel","visibility":"Public","body":"@channel"}},{"id":"guild:Discord::Guild?-instance-method","html_id":"guild:Discord::Guild?-instance-method","name":"guild","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::Guild?","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/cached_event.cr#L29","def":{"name":"guild","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Discord::Guild | ::Nil","visibility":"Public","body":"@guild"}},{"id":"member:Discord::GuildMember?-instance-method","html_id":"member:Discord::GuildMember?-instance-method","name":"member","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::GuildMember?","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/cached_event.cr#L30","def":{"name":"member","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Discord::GuildMember | ::Nil","visibility":"Public","body":"@member"}},{"id":"member_roles:Array(Discord::Role)?-instance-method","html_id":"member_roles:Array(Discord::Role)?-instance-method","name":"member_roles","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Discord::Role)?","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/cached_event.cr#L31","def":{"name":"member_roles","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Discord::Role) | ::Nil","visibility":"Public","body":"@member_roles"}}],"macros":[],"types":[]}]},{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware/CachedRoutes","path":"DiscordMiddleware/CachedRoutes.html","kind":"module","full_name":"DiscordMiddleware::CachedRoutes","name":"CachedRoutes","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"discordcr-middleware/middleware/cached_routes.cr","line_number":2,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/cached_routes.cr"}],"repository_name":"github.com/z64/discordcr-middleware","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware/CachedEvent","kind":"class","full_name":"DiscordMiddleware::CachedEvent","name":"CachedEvent"},{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware/Channel","kind":"class","full_name":"DiscordMiddleware::Channel","name":"Channel"},{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware/Permissions","kind":"class","full_name":"DiscordMiddleware::Permissions","name":"Permissions"},{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware/RateLimiter","kind":"class","full_name":"DiscordMiddleware::RateLimiter","name":"RateLimiter"}],"namespace":{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware","kind":"module","full_name":"DiscordMiddleware","name":"DiscordMiddleware"},"doc":"Mixin for common helpers to access cached resources","summary":"<p>Mixin for common helpers to access cached resources</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware/Channel","path":"DiscordMiddleware/Channel.html","kind":"class","full_name":"DiscordMiddleware::Channel","name":"Channel","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr-middleware/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware/CachedRoutes","kind":"module","full_name":"DiscordMiddleware::CachedRoutes","name":"CachedRoutes"},{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware/AttributeMiddleware","kind":"module","full_name":"DiscordMiddleware::AttributeMiddleware","name":"AttributeMiddleware"},{"html_id":"github.com/z64/discordcr-middleware/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/z64/discordcr-middleware/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr-middleware/middleware/channel.cr","line_number":6,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/channel.cr"}],"repository_name":"github.com/z64/discordcr-middleware","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware/AttributeMiddleware","kind":"module","full_name":"DiscordMiddleware::AttributeMiddleware","name":"AttributeMiddleware"},{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware/CachedRoutes","kind":"module","full_name":"DiscordMiddleware::CachedRoutes","name":"CachedRoutes"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware","kind":"module","full_name":"DiscordMiddleware","name":"DiscordMiddleware"},"doc":"Matches the channel the message event was raised from based on\nseveral different attributes. If the client has a cache enabled,\nit will be used to resolve the channel the message came from.","summary":"<p>Matches the channel the message event was raised from based on several different attributes.</p>","class_methods":[],"constructors":[{"id":"new(id:UInt64?=nil,name:String?=nil,topic:String?=nil,nsfw:Bool?=nil,guild_id:UInt64?=nil,type:Discord::ChannelType?=nil)-class-method","html_id":"new(id:UInt64?=nil,name:String?=nil,topic:String?=nil,nsfw:Bool?=nil,guild_id:UInt64?=nil,type:Discord::ChannelType?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"id","doc":null,"default_value":"nil","external_name":"id","restriction":"UInt64 | ::Nil"},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":"String | ::Nil"},{"name":"topic","doc":null,"default_value":"nil","external_name":"topic","restriction":"String | ::Nil"},{"name":"nsfw","doc":null,"default_value":"nil","external_name":"nsfw","restriction":"Bool | ::Nil"},{"name":"guild_id","doc":null,"default_value":"nil","external_name":"guild_id","restriction":"UInt64 | ::Nil"},{"name":"type","doc":null,"default_value":"nil","external_name":"type","restriction":"Discord::ChannelType | ::Nil"}],"args_string":"(id : UInt64? = <span class=\"n\">nil</span>, name : String? = <span class=\"n\">nil</span>, topic : String? = <span class=\"n\">nil</span>, nsfw : Bool? = <span class=\"n\">nil</span>, guild_id : UInt64? = <span class=\"n\">nil</span>, type : Discord::ChannelType? = <span class=\"n\">nil</span>)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/channel.cr#L10","def":{"name":"new","args":[{"name":"id","doc":null,"default_value":"nil","external_name":"id","restriction":"UInt64 | ::Nil"},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":"String | ::Nil"},{"name":"topic","doc":null,"default_value":"nil","external_name":"topic","restriction":"String | ::Nil"},{"name":"nsfw","doc":null,"default_value":"nil","external_name":"nsfw","restriction":"Bool | ::Nil"},{"name":"guild_id","doc":null,"default_value":"nil","external_name":"guild_id","restriction":"UInt64 | ::Nil"},{"name":"type","doc":null,"default_value":"nil","external_name":"type","restriction":"Discord::ChannelType | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(id, name, topic, nsfw, guild_id, type)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(payload:Discord::Message,context:Discord::Context,&block)-instance-method","html_id":"call(payload:Discord::Message,context:Discord::Context,&amp;block)-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"payload","doc":null,"default_value":"","external_name":"payload","restriction":"Discord::Message"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"Discord::Context"}],"args_string":"(payload : Discord::Message, context : Discord::Context, &block)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/channel.cr#L15","def":{"name":"call","args":[{"name":"payload","doc":null,"default_value":"","external_name":"payload","restriction":"Discord::Message"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"Discord::Context"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"client = context[Discord::Client]\nch = get_channel(client, payload.channel_id)\ncheck_attributes(ch)\nyield\n"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware/Conditional","path":"DiscordMiddleware/Conditional.html","kind":"class","full_name":"DiscordMiddleware::Conditional","name":"Conditional","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr-middleware/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/z64/discordcr-middleware/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/z64/discordcr-middleware/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr-middleware/middleware/conditional.cr","line_number":4,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/conditional.cr"}],"repository_name":"github.com/z64/discordcr-middleware","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware","kind":"module","full_name":"DiscordMiddleware","name":"DiscordMiddleware"},"doc":"The Conditional middleware is useful when you want to check one or more\nconditions from the context or elsewhere, but don't want to write\nyour own middleware to do it.","summary":"<p>The Conditional middleware is useful when you want to check one or more conditions from the context or elsewhere, but don't want to write your own middleware to do it.</p>","class_methods":[],"constructors":[{"id":"new(condition:Proc(Discord::Message,Discord::Context,Bool))-class-method","html_id":"new(condition:Proc(Discord::Message,Discord::Context,Bool))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"condition","doc":null,"default_value":"","external_name":"condition","restriction":"Proc(Discord::Message, Discord::Context, Bool)"}],"args_string":"(condition : Proc(Discord::Message, Discord::Context, Bool))","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/conditional.cr#L5","def":{"name":"new","args":[{"name":"condition","doc":null,"default_value":"","external_name":"condition","restriction":"Proc(Discord::Message, Discord::Context, Bool)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(condition)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(payload:Discord::Message,context:Discord::Context,&block)-instance-method","html_id":"call(payload:Discord::Message,context:Discord::Context,&amp;block)-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"payload","doc":null,"default_value":"","external_name":"payload","restriction":"Discord::Message"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"Discord::Context"}],"args_string":"(payload : Discord::Message, context : Discord::Context, &block)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/conditional.cr#L8","def":{"name":"call","args":[{"name":"payload","doc":null,"default_value":"","external_name":"payload","restriction":"Discord::Message"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"Discord::Context"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"if @condition.call(payload, context)\n  yield\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware/Error","path":"DiscordMiddleware/Error.html","kind":"class","full_name":"DiscordMiddleware::Error","name":"Error","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr-middleware/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/z64/discordcr-middleware/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/z64/discordcr-middleware/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr-middleware/middleware/error.cr","line_number":11,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/error.cr"}],"repository_name":"github.com/z64/discordcr-middleware","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware","kind":"module","full_name":"DiscordMiddleware","name":"DiscordMiddleware"},"doc":"This middleware immediately calls the next middleware in the chain, and if\nany subsequent middleware raises an exception, it will be caught by this\nmiddleware allowing the user to trigger additional handling. Such as,\nfor example, responding to the user with an error message or doing\nextra logging at the time of exception.\n\nIt can be initialized with a string that will be used as a canned response.\nThe text \"%exception%\" will be replaced with the exception's message if\nprovided. Alternatively, it can be initialized with a block for any other\ncustom behavior.","summary":"<p>This middleware immediately calls the next middleware in the chain, and if any subsequent middleware raises an exception, it will be caught by this middleware allowing the user to trigger additional handling.</p>","class_methods":[],"constructors":[{"id":"new(message:String)-class-method","html_id":"new(message:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"}],"args_string":"(message : String)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/error.cr#L12","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(&block:Discord::Message,Discord::Context->)-class-method","html_id":"new(&amp;block:Discord::Message,Discord::Context-&gt;)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&block : Discord::Message, Discord::Context -> )","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/error.cr#L17","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Discord::Message, Discord::Context -> )"},"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(&block) do |_arg0, _arg1|\n  yield _arg0, _arg1\nend\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(payload:Discord::Message,context:Discord::Context,&block)-instance-method","html_id":"call(payload:Discord::Message,context:Discord::Context,&amp;block)-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"payload","doc":null,"default_value":"","external_name":"payload","restriction":"Discord::Message"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"Discord::Context"}],"args_string":"(payload : Discord::Message, context : Discord::Context, &block)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/error.cr#L22","def":{"name":"call","args":[{"name":"payload","doc":null,"default_value":"","external_name":"payload","restriction":"Discord::Message"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"Discord::Context"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  yield\nrescue ex\n  if message = @message\n    channel_id = payload.channel_id\n    message = message.gsub(\"%exception%\", ex.message)\n    context[Discord::Client].create_message(channel_id, message)\n  end\n  @block.try(&.call(payload, context))\n  raise(ex)\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware/Permissions","path":"DiscordMiddleware/Permissions.html","kind":"class","full_name":"DiscordMiddleware::Permissions","name":"Permissions","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr-middleware/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware/CachedRoutes","kind":"module","full_name":"DiscordMiddleware::CachedRoutes","name":"CachedRoutes"},{"html_id":"github.com/z64/discordcr-middleware/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/z64/discordcr-middleware/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr-middleware/middleware/permissions.cr","line_number":25,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/permissions.cr"}],"repository_name":"github.com/z64/discordcr-middleware","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"DM_PERMISSIONS","name":"DM_PERMISSIONS","value":"Discord::Permissions.flags(ManageChannels, AddReactions, ReadMessages, SendMessages, SendTTSMessages, EmbedLinks, AttachFiles, ReadMessageHistory, MentionEveryone, UseExternalEmojis, Connect, Speak, UseVAD)","doc":"The permissions a user has in a direct message","summary":"<p>The permissions a user has in a direct message</p>"}],"included_modules":[{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware/CachedRoutes","kind":"module","full_name":"DiscordMiddleware::CachedRoutes","name":"CachedRoutes"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware","kind":"module","full_name":"DiscordMiddleware","name":"DiscordMiddleware"},"doc":"This middleware evaluates the permissions of the calling message author.\n\nIf the message is from a guild, the guilds roles and the current channels\npermissions will be taken into account according to the members roles.\nOtherwise, `DM_PERMISSIONS` will be considered.\n\nIf the client has a cache enabled, it will be used to fetch the guild\nand channel.\n\nIt can be initialized with a string that will be used as a canned response.\nThe text \"%permissions%\" will be replaced with the *required* permissions if\nprovided.\n\n```\n# Require that a user has permission to kick members to trigger this\n# handler\nperms = Discord::Permissions::KickMembers\n\nclient.on_message_create(\n  DiscordMiddleware::Prefix.new(\"!kick\"),\n  DiscordMiddleware::Permissions.new(perms, \"Permission Denied. Must have %permissions%\")) do |payload, context|\n  # Kick 'em\nend\n```","summary":"<p>This middleware evaluates the permissions of the calling message author.</p>","class_methods":[],"constructors":[{"id":"new(permissions:Discord::Permissions,permission_denied_message:String?=nil)-class-method","html_id":"new(permissions:Discord::Permissions,permission_denied_message:String?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"permissions","doc":null,"default_value":"","external_name":"permissions","restriction":"Discord::Permissions"},{"name":"permission_denied_message","doc":null,"default_value":"nil","external_name":"permission_denied_message","restriction":"String | ::Nil"}],"args_string":"(permissions : Discord::Permissions, permission_denied_message : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/permissions.cr#L45","def":{"name":"new","args":[{"name":"permissions","doc":null,"default_value":"","external_name":"permissions","restriction":"Discord::Permissions"},{"name":"permission_denied_message","doc":null,"default_value":"nil","external_name":"permission_denied_message","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(permissions, permission_denied_message)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"base_permissions_for(member,inguild)-instance-method","html_id":"base_permissions_for(member,inguild)-instance-method","name":"base_permissions_for","doc":"Returns the member's base permissions on the guild\n:nodoc:","summary":"<p>Returns the member's base permissions on the guild :nodoc:</p>","abstract":false,"args":[{"name":"member","doc":null,"default_value":"","external_name":"member","restriction":""},{"name":"guild","doc":null,"default_value":"","external_name":"in","restriction":""}],"args_string":"(member, in guild)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/permissions.cr#L50","def":{"name":"base_permissions_for","args":[{"name":"member","doc":null,"default_value":"","external_name":"member","restriction":""},{"name":"guild","doc":null,"default_value":"","external_name":"in","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if guild.owner_id == member.user.id\n  return Discord::Permissions::All\nend\nperms = Discord::Permissions::None\nguild.roles.each do |role|\n  if (member.roles.includes?(role.id)) || (role.id == guild.id)\n    perms = perms | role.permissions\n  end\nend\nif perms.administrator?\n  return Discord::Permissions::All\nend\nperms\n"}},{"id":"call(payload:Discord::Message,context:Discord::Context,&block)-instance-method","html_id":"call(payload:Discord::Message,context:Discord::Context,&amp;block)-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"payload","doc":null,"default_value":"","external_name":"payload","restriction":"Discord::Message"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"Discord::Context"}],"args_string":"(payload : Discord::Message, context : Discord::Context, &block)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/permissions.cr#L101","def":{"name":"call","args":[{"name":"payload","doc":null,"default_value":"","external_name":"payload","restriction":"Discord::Message"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"Discord::Context"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"client = context[Discord::Client]\nchannel = get_channel(client, payload.channel_id)\nuser_id = payload.author.id\nif guild_id = channel.guild_id\n  guild = get_guild(client, guild_id)\n  if guild.owner_id == user_id\n    return yield\n  end\n  member = get_member(client, guild_id, user_id)\n  permissions = base_permissions_for(member, in: guild)\n  if permissions.administrator?\n    return yield\n  end\n  overwrites = overwrites_for(member, in: channel, with: permissions)\n  if (@permissions & overwrites) == @permissions\n    return yield\n  end\nelse\n  if (@permissions & DM_PERMISSIONS) == @permissions\n    return yield\n  end\nend\nif msg = @permission_denied_message\n  msg = msg.gsub(\"%permissions%\", @permissions)\n  client.create_message(payload.channel_id, msg)\nend\n"}},{"id":"overwrites_for(member,inchannel,withbase_permissions)-instance-method","html_id":"overwrites_for(member,inchannel,withbase_permissions)-instance-method","name":"overwrites_for","doc":"Returns the applicable overwrite permissions\n:nodoc:","summary":"<p>Returns the applicable overwrite permissions :nodoc:</p>","abstract":false,"args":[{"name":"member","doc":null,"default_value":"","external_name":"member","restriction":""},{"name":"channel","doc":null,"default_value":"","external_name":"in","restriction":""},{"name":"base_permissions","doc":null,"default_value":"","external_name":"with","restriction":""}],"args_string":"(member, in channel, with base_permissions)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/permissions.cr#L68","def":{"name":"overwrites_for","args":[{"name":"member","doc":null,"default_value":"","external_name":"member","restriction":""},{"name":"channel","doc":null,"default_value":"","external_name":"in","restriction":""},{"name":"base_permissions","doc":null,"default_value":"","external_name":"with","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if base_permissions.administrator?\n  return Discord::Permissions::All\nend\nif overwrites = channel.permission_overwrites\n  overwrites.find do |o|\n    (o.id == channel.guild_id) && (o.type == \"role\")\n  end.try do |o|\n    base_permissions = base_permissions & (~o.deny)\n    base_permissions = base_permissions | o.allow\n  end\n  allow = Discord::Permissions::None\n  deny = Discord::Permissions::None\n  overwrites.each do |o|\n    if (member.roles.includes?(o.id)) && (o.type == \"role\")\n      allow = allow | o.allow\n      deny = deny | o.deny\n    end\n  end\n  base_permissions = base_permissions & (~deny)\n  base_permissions = base_permissions | allow\n  overwrites.find do |o|\n    (o.id == member.user.id) && (o.type == \"user\")\n  end.try do |o|\n    base_permissions = base_permissions & (~o.deny)\n    base_permissions = base_permissions | o.allow\n  end\nend\nbase_permissions\n"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware/Prefix","path":"DiscordMiddleware/Prefix.html","kind":"class","full_name":"DiscordMiddleware::Prefix","name":"Prefix","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr-middleware/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/z64/discordcr-middleware/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/z64/discordcr-middleware/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr-middleware/middleware/prefix.cr","line_number":9,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/prefix.cr"}],"repository_name":"github.com/z64/discordcr-middleware","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware","kind":"module","full_name":"DiscordMiddleware","name":"DiscordMiddleware"},"doc":"Middleware that passes if the given message in the context starts with\na specified string.\n```\nclient.on_message_create(Prefix.new(\"!ping\")) do |payload|\n  channel_id = payload.channel_id\n  client.create_message(channel_id, \"pong\")\nend\n```","summary":"<p>Middleware that passes if the given message in the context starts with a specified string.</p>","class_methods":[],"constructors":[{"id":"new(prefix:String|Char)-class-method","html_id":"new(prefix:String|Char)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":"String | Char"}],"args_string":"(prefix : String | Char)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/prefix.cr#L10","def":{"name":"new","args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":"String | Char"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(prefix)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(payload:Discord::Message,context:Discord::Context,&block)-instance-method","html_id":"call(payload:Discord::Message,context:Discord::Context,&amp;block)-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"payload","doc":null,"default_value":"","external_name":"payload","restriction":"Discord::Message"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"Discord::Context"}],"args_string":"(payload : Discord::Message, context : Discord::Context, &block)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/prefix.cr#L13","def":{"name":"call","args":[{"name":"payload","doc":null,"default_value":"","external_name":"payload","restriction":"Discord::Message"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"Discord::Context"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"if payload.content.starts_with?(@prefix)\n  yield\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware/RateLimiter","path":"DiscordMiddleware/RateLimiter.html","kind":"class","full_name":"DiscordMiddleware::RateLimiter","name":"RateLimiter","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr-middleware/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware/CachedRoutes","kind":"module","full_name":"DiscordMiddleware::CachedRoutes","name":"CachedRoutes"},{"html_id":"github.com/z64/discordcr-middleware/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/z64/discordcr-middleware/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr-middleware/middleware/rate_limiter.cr","line_number":39,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/rate_limiter.cr"}],"repository_name":"github.com/z64/discordcr-middleware","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware/CachedRoutes","kind":"module","full_name":"DiscordMiddleware::CachedRoutes","name":"CachedRoutes"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware","kind":"module","full_name":"DiscordMiddleware","name":"DiscordMiddleware"},"doc":"Middleware for performing rate limiting on message events. Rate limiting\ncan be configured to be per-user, per-channel, or per-guild by passing\na `RateLimiterKey` option.\n\nIf the client has a cache enabled, it will be\nused to resolve the guild to be rate limited on.\n\nIf `message` contains the substring `\"%time%\"` it will be replaced\nwith the remaining time until the rate limit expires.\n```\nlimiter = RateLimiter(UInt64).new\n\n# Limit 3 events per second\nlimiter.bucket(:foo, 3_u32, 1.seconds)\n\nmiddleware = DiscordMiddleware::RateLimiter.new(\n  limiter,\n  :foo,\n  DiscordMiddleware::RateLimiterKey::ChannelID\n  \"Slow down! Try again in %time%.\"\n)\n\nclient.on_message_create(middleware) do |payload, context|\n  # Post memes, but not too quickly per-channel\nend\n```","summary":"<p>Middleware for performing rate limiting on message events.</p>","class_methods":[],"constructors":[{"id":"new(limiter:::RateLimiter(Discord::Snowflake),bucket:Symbol,key:RateLimiterKey=RateLimiterKey::UserID,message:String?=nil)-class-method","html_id":"new(limiter:::RateLimiter(Discord::Snowflake),bucket:Symbol,key:RateLimiterKey=RateLimiterKey::UserID,message:String?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"limiter","doc":null,"default_value":"","external_name":"limiter","restriction":"::RateLimiter(Discord::Snowflake)"},{"name":"bucket","doc":null,"default_value":"","external_name":"bucket","restriction":"Symbol"},{"name":"key","doc":null,"default_value":"RateLimiterKey::UserID","external_name":"key","restriction":"RateLimiterKey"},{"name":"message","doc":null,"default_value":"nil","external_name":"message","restriction":"String | ::Nil"}],"args_string":"(limiter : ::RateLimiter(Discord::Snowflake), bucket : Symbol, key : RateLimiterKey = <span class=\"t\">RateLimiterKey</span><span class=\"t\">::</span><span class=\"t\">UserID</span>, message : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/rate_limiter.cr#L42","def":{"name":"new","args":[{"name":"limiter","doc":null,"default_value":"","external_name":"limiter","restriction":"::RateLimiter(Discord::Snowflake)"},{"name":"bucket","doc":null,"default_value":"","external_name":"bucket","restriction":"Symbol"},{"name":"key","doc":null,"default_value":"RateLimiterKey::UserID","external_name":"key","restriction":"RateLimiterKey"},{"name":"message","doc":null,"default_value":"nil","external_name":"message","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(limiter, bucket, key, message)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(payload:Discord::Message,context:Discord::Context,&block)-instance-method","html_id":"call(payload:Discord::Message,context:Discord::Context,&amp;block)-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"payload","doc":null,"default_value":"","external_name":"payload","restriction":"Discord::Message"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"Discord::Context"}],"args_string":"(payload : Discord::Message, context : Discord::Context, &block)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/rate_limiter.cr#L54","def":{"name":"call","args":[{"name":"payload","doc":null,"default_value":"","external_name":"payload","restriction":"Discord::Message"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"Discord::Context"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"client = context[Discord::Client]\ncase key = @key\nwhen RateLimiterKey::UserID\n  if time = @limiter.rate_limited?(@bucket, payload.author.id)\n    rate_limit_reply(client, payload.channel_id, time)\n    return\n  end\nwhen RateLimiterKey::ChannelID\n  if time = @limiter.rate_limited?(@bucket, payload.channel_id)\n    rate_limit_reply(client, payload.channel_id, time)\n    return\n  end\nwhen RateLimiterKey::GuildID\n  if guild_id = (get_channel(client, payload.channel_id)).guild_id\n    if guild = get_guild(client, guild_id)\n      if time = @limiter.rate_limited?(@bucket, payload.channel_id)\n        rate_limit_reply(client, payload.channel_id, time)\n        return\n      end\n    end\n  end\nend\nyield\n"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware/RateLimiterKey","path":"DiscordMiddleware/RateLimiterKey.html","kind":"enum","full_name":"DiscordMiddleware::RateLimiterKey","name":"RateLimiterKey","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/z64/discordcr-middleware/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/z64/discordcr-middleware/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/z64/discordcr-middleware/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr-middleware/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr-middleware/middleware/rate_limiter.cr","line_number":7,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/rate_limiter.cr"}],"repository_name":"github.com/z64/discordcr-middleware","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"UserID","name":"UserID","value":"0","doc":null,"summary":null},{"id":"ChannelID","name":"ChannelID","value":"1","doc":null,"summary":null},{"id":"GuildID","name":"GuildID","value":"2","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware","kind":"module","full_name":"DiscordMiddleware","name":"DiscordMiddleware"},"doc":"Enum for specifying which event attribute should be used\nfor rate limiting, in order to have per-user, per-channel,\nor a per-guild rate limit.","summary":"<p>Enum for specifying which event attribute should be used for rate limiting, in order to have per-user, per-channel, or a per-guild rate limit.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"channel_id?-instance-method","html_id":"channel_id?-instance-method","name":"channel_id?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/rate_limiter.cr#L9","def":{"name":"channel_id?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ChannelID"}},{"id":"guild_id?-instance-method","html_id":"guild_id?-instance-method","name":"guild_id?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/rate_limiter.cr#L10","def":{"name":"guild_id?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == GuildID"}},{"id":"user_id?-instance-method","html_id":"user_id?-instance-method","name":"user_id?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/rate_limiter.cr#L8","def":{"name":"user_id?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == UserID"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware/Time","path":"DiscordMiddleware/Time.html","kind":"class","full_name":"DiscordMiddleware::Time","name":"Time","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr-middleware/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/z64/discordcr-middleware/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/z64/discordcr-middleware/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr-middleware/middleware/time.cr","line_number":14,"url":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/time.cr"}],"repository_name":"github.com/z64/discordcr-middleware","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr-middleware/DiscordMiddleware","kind":"module","full_name":"DiscordMiddleware","name":"DiscordMiddleware"},"doc":"This middleware provides a method of executing some block after a given\namount of time from receiving an event.\n```crystal\ndelayed = DiscordMiddleware::Time.new(5.seconds) do |context|\n  channel_id = context.payload.channel_id\n  context.client.create_message(channel_id, \"I'm back!\")\nend\n\nclient.on_message_create(delayed) do |payload, context|\n  channel_id = payload.channel_id\n  context.client.create_message(channel_id, \"Going away for 5 seconds..\")\nend\n```","summary":"<p>This middleware provides a method of executing some block after a given amount of time from receiving an event.</p>","class_methods":[],"constructors":[{"id":"new(delay:::Time::Span,&block:Discord::Message,Discord::Context->)-class-method","html_id":"new(delay:::Time::Span,&amp;block:Discord::Message,Discord::Context-&gt;)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"delay","doc":null,"default_value":"","external_name":"delay","restriction":"::Time::Span"}],"args_string":"(delay : ::Time::Span, &block : Discord::Message, Discord::Context -> )","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/time.cr#L15","def":{"name":"new","args":[{"name":"delay","doc":null,"default_value":"","external_name":"delay","restriction":"::Time::Span"}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Discord::Message, Discord::Context -> )"},"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(delay, &block) do |_arg0, _arg1|\n  yield _arg0, _arg1\nend\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(payload:Discord::Message,context:Discord::Context,&block)-instance-method","html_id":"call(payload:Discord::Message,context:Discord::Context,&amp;block)-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"payload","doc":null,"default_value":"","external_name":"payload","restriction":"Discord::Message"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"Discord::Context"}],"args_string":"(payload : Discord::Message, context : Discord::Context, &block)","source_link":"https://github.com/z64/discordcr-middleware/blob/5c0b2ba082839aef76b6f452eacb30a54bdd2675/src/discordcr-middleware/middleware/time.cr#L19","def":{"name":"call","args":[{"name":"payload","doc":null,"default_value":"","external_name":"payload","restriction":"Discord::Message"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"Discord::Context"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"spawn do\n  sleep(@delay)\n  @block.call(payload, context)\nend\nyield\n"}}],"macros":[],"types":[]}]}]}}